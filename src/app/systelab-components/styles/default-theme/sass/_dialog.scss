/* ==========================================================================
   DIALOG
   ========================================================================== */

/**
 * Name: .slab-dialog
 *
 * Displays a Dialog to contain any kind of content. It could be displayed as
 * a full-size screen or using custom width/height properties.
 *
 *
 * Markup:
 *
 *   <div class="slab-dialog-overlay">
 *     <div class="slab-dialog">
 *       <div class="slab-dialog-content">
 *         <div>
 *           <div class="slab-dialog-header">...</div>
 *           <div class="slab-dialog-message">...</div>
 *           <div class="slab-dialog-buttons">...</div>
 *           <div class="slab-dialog-close">...</div>
 *           <div class="slab-dialog-buttons-top">...</div>
 *         </div>
 *       </div>
 *     </div>
 *   </div>
 *
 */

@import "dialog-mixins";

$content-border-width: 4px;
$header-buttons-top-offset: 5px * $size_percentage;
$footer-buttons-offset: ceil(16px * $size_percentage);
$button-size: ceil(54px * $size_percentage);
$button-fontsize: ceil(32px * $size_percentage);
$close-button-right-offset: ceil(9px * $size_percentage);
$top-buttons-right-offset: ceil($button-size + $close-button-right-offset + 6);

/**
 * Displays the full-screen overlay and centers its content (the dialog itself)
 */
.slab-dialog-overlay {
  @include position(fixed, $top: 0, $left: 0, $right: 0, $bottom: 0);
  display: flex;
  align-items: center;
  justify-content: center;

  background-color: rgba(0, 0, 0, 0.4);
}


/**
 * 1. Full-screen by default.
 * 2. Preventively hide the 'back' side of a transformed elemenet.
 */
.slab-dialog {
  @include size(100%); /* [1] */

  > * {
    -webkit-backface-visibility: hidden; /* [2] */
  }
}


/**
 * 1. We use !important because it needs to override the default `display:block`
 *    from the dialog component.
 * 2. Is there a better way to target wrappers such as grid-options-dialog{} ?
 * 3. Required to position the top buttons. This could be refactored but then
 *    we'd need to tweak all the dialogs and place top buttons in the header.
 */
.slab-dialog-content {
  @include size(100%);
  display: flex !important; /* [1] */

  border: none;
  border-radius: 0;
  background-color: $slab-dialog-border-color;

  & > *:first-child { /* [2] */
    flex: 1;
    display: flex;
    flex-direction: column;
    position: relative; /* [3] */
  }
}


.slab-dialog-header {
  display: flex;
  align-items: center;
  height: $slab-dialog-header-height;
  padding-left: 20px;

  font-size: 20px;
  border-radius: 0;
  background: $primary-color;
  color: $background;
}


.slab-dialog-message {
  flex: 1;
  overflow: auto;

  background-color: $background;
}


/**
 * 1. Make sure smaller sizes (such as $size_percentage = 0.7) looks OK.
 */
.slab-dialog-buttons {
  padding: $footer-buttons-offset;

  border-top: 1px solid $background-hemohub;
  background-color: $darker-gray;


  .square {
    @include size($button-size);

    min-width: $button-size; /* [1] */
    min-height: $button-size; /* [1] */
    line-height: 1;
    padding: 0;
  }
}


.slab-dialog-buttons-top > div,
.slab-dialog-close {
    @include size($button-size);
    display: flex;
    align-items: center;
    justify-content: center;

    background-color: $primary-color-darken;
    cursor: pointer;
    text-align: center;
    border-radius: $content-border-width + 1;
    color: $background;

    i,
    &:before {
      @include font-smoothing(antialiased);
      color: $background;
      font-size: $button-fontsize;
      font-family: icomoon;
    }

    &:hover {
      background-color: $primary-color-darken-hover;
    }
}


/**
 * 1. This could be refactored but then we'd need to tweak all the dialogs and
 *    place top buttons in the header.
 */
.slab-dialog-close {
  @include position(absolute, $top: $header-buttons-top-offset, $right: $close-button-right-offset); /* [1] */

  &:before {
    content: "\F057";
    cursor: pointer;
  }
}


.slab-dialog-buttons-top {
  @include position(absolute, $top: $header-buttons-top-offset, $right: $top-buttons-right-offset);
  width: auto;
}





/* Style modifies.
   ========================================================================== */


  .slab-dialog {
    &[class*="h-"],
    &[class*="w-"],
    &.slab-dialog-fixed-size { /* [3] */
      .slab-dialog-content {
        background-color: $slab-dialog-border-color;
        border: $content-border-width solid $slab-dialog-border-color;
        border-radius: $content-border-width;
  
        .slab-dialog-header {
          border-radius: $content-border-width $content-border-width 0 0;
        }
  
        .slab-dialog-buttons {
          border-radius: 0 0 $content-border-width $content-border-width;
          background: $background;
        }
      }
    }


    &.w-100,
    &.h-100 {
      .slab-dialog-content,
      .slab-dialog-header,
      .slab-dialog-buttons {
        border-radius: 0;
      }

      .slab-dialog-content {
        border: none;
      }

      .slab-dialog-buttons {
        background-color: $darker-gray;
      }
    }
  }





/* Animations.
   ========================================================================== */


.slab-dialog-flyin {
  @include slab-dialog-flyin;
}


.slab-dialog-flyout {
  @include slab-dialog-flyout;
}


.slab-dialog.slab-dialog-disabled-animation,
.slab-dialog.slab-dialog-disabled-animation .slab-dialog-content,
.slab-dialog.slab-dialog-disabled-animation .slab-dialog-overlay {
  -webkit-animation: none !important;
  animation: none !important
}
